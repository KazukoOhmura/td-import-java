#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# td-bulk-import test command

require 'rubygems' unless defined?(gem)
require 'td/config'

HERE = File.dirname(__FILE__)
PART_SPLIT_SIZE = 16*1024*1024

JAVA_COMMAND = "java"
JAVA_MAIN_CLASS = "com.treasure_data.bulk_import.BulkImportMain"
JAVA_HEAP_MAX_SIZE = "-Xmx1024m" # TODO

APP_OPTION_PREPARE = "prepare"
APP_OPTION_UPLOAD = "upload"

def import_prepare()
  exec_import_command(APP_OPTION_PREPARE)
end

def import_upload()
  exec_import_command(APP_OPTION_UPLOAD)
end

def exec_import_command(subcmd)
  puts "Require Java version 1.6 or later."

  # make jvm options
  jvm_opts = [ JAVA_HEAP_MAX_SIZE ]

  # make application options
  app_opts = [ "-cp \"#{find_td_bulk_import_jar()}\"" ]

  # make system properties
  sysprops = set_sysprops()

  # make application arguments
  app_args = []
  app_args << JAVA_MAIN_CLASS
  app_args << subcmd
  app_args << ARGV

  # TODO consider parameters including spaces; don't use join(' ')
  cmd = "#{JAVA_COMMAND} #{jvm_opts.join(' ')} #{app_opts.join(' ')} #{sysprops.join(' ')} #{app_args.join(' ')}"

  exec cmd
end

def find_td_bulk_import_jar
  libjars = Dir.glob("#{HERE}/../src/test/resources/java/**/*.jar")
  found = libjars.find { |path| File.basename(path) =~ /^td-bulk-import/ }
  if found.nil?
    $stderr.puts "You should build td-bulk-import first. Please type 'mvn package -Dmaven.test.skip=true'"
    exit
  end
  td_bulk_import_jar = libjars.delete(found)
  td_bulk_import_jar
end

def set_sysprops()
  sysprops = []

  # set http_proxy
  http_proxy = ENV['HTTP_PROXY']
  if http_proxy
    if http_proxy =~ /\Ahttp:\/\/(.*)\z/
      http_proxy = $~[1]
    end
    proxy_host, proxy_port = http_proxy.split(':', 2)
    proxy_port = (proxy_port ? proxy_port.to_i : 80)

    sysprops << "-Dhttp.proxyHost=#{proxy_host}"
    sysprops << "-Dhttp.proxyPort=#{proxy_port}"
  end

  # set configuration file for logging
  conf_file = find_logging_conf_file
  if conf_file
    sysprops << "-Djava.util.logging.config.file=#{conf_file}"
  end

  # set API key
  sysprops << "-Dtd.api.key=#{TreasureData::Config.apikey}"

  sysprops
end

def find_logging_conf_file
  libjars = Dir.glob("#{HERE}/../src/test/resources/java/**/*.properties")
  found = libjars.find { |path| File.basename(path) =~ /^logging.properties/ }
  return nil if found.nil?
  logging_conf_file = libjars.delete(found)
  logging_conf_file
end

command = ARGV.shift
case command
when APP_OPTION_PREPARE
  import_prepare
when APP_OPTION_UPLOAD
  import_upload
else
  $stderr.puts "Unknown command: #{command}"
end
