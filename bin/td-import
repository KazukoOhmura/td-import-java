#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# td-import test command

require 'rubygems' unless defined?(gem)
require 'td/config'

HERE = File.dirname(__FILE__)
PART_SPLIT_SIZE = 16*1024*1024

JAVA_COMMAND = "java"
JAVA_MAIN_CLASS = "com.treasure_data.bulk_import.Main"
JAVA_HEAP_MX_SIZE = "-Xmx1024m" # TODO

def table_import2(op)
  op.banner << "\nsupported formats:\n"
  op.banner << "  apache\n"
  op.banner << "  syslog\n"
  op.banner << "  msgpack\n"
  op.banner << "  json\n"

  format = 'apache'
  time_key = 'time'
  auto_create = false

  op.on('--format FORMAT', "file format (default: #{format})") {|s|
    format = s
  }
  op.on('--apache', "same as --format apache; apache common log format") {
    format = 'apache'
  }
  op.on('--syslog', "same as --format syslog; syslog") {
    format = 'syslog'
  }
  op.on('--msgpack', "same as --format msgpack; msgpack stream format") {
    format = 'msgpack'
  }
  op.on('--json', "same as --format json; LF-separated json format") {
    format = 'json'
  }
  op.on('-t', '--time-key COL_NAME', "time key name for json and msgpack format (e.g. 'created_at')") {|s|
    time_key = s
  }
  op.on('--auto-create-table', "Create table and database if doesn't exist", TrueClass) { |b|
    auto_create = b
  }

  db_name, table_name, *paths = op.cmd_parse

  if auto_create
  end


  puts "done."
end

require 'optparse'

command = ARGV.shift
op = OptionParser.new
op.banner = <<EOF
usage: #{File.basename($0)} [OPTIONS]

OPTIONS are same as td command.
EOF

table_import2(op)
